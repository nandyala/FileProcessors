<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

    <batch:job id="fileReader">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="fileItemReader" processor="fileProcessor" writer="flatFileWriter"
                             commit-interval="1" skip-policy="testSkipPolicy">
                    <batch:streams>
                        <batch:stream ref="errorItemWriter"/>
                    </batch:streams>
                </batch:chunk>
                <batch:listeners>
                    <batch:listener ref="skipListener"/>
                </batch:listeners>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="testSkipPolicy" class="com.carnival.batch.support.RecordSkipPolicy"/>

    <bean id="skipListener" class="com.carnival.batch.support.FileSkipListener">
        <property name="errorItemWriter" ref="errorItemWriter"/>
    </bean>

    <bean id="errorItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <property name="resource" ref="errorFileLocator"/>
        <property name="shouldDeleteIfEmpty" value="true"/>
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|"/>
			</bean>
		</property>
    </bean>

    <bean id="errorFileLocator" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg type="java.lang.String" value="${errorFile}"/>
    </bean>


    <bean id="fileProcessor" class="com.carnival.batch.processor.PipeFileProcessor">
        <property name="dateFormat" value="yyyymmdd"/>
        <property name="recordTypeMap" ref="recordTypeMap"/>
    </bean>

    <bean id="fileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

        <!-- Read a csv file -->
        <property name="resource" ref="dataLocator"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer" ref="flatFileTokenizer"/>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper"/>
                </property>
            </bean>

        </property>
    </bean>

    <bean id="flatFileTokenizer"
          class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
        <property name="tokenizers">
            <map>
                <entry key="FH*" value-ref="recordTypeFH"/>
                <entry key="471*" value-ref="recordType471"/>
                <entry key="472*" value-ref="recordType472"/>
                <entry key="FT*" value-ref="recordTypeFT"/>
            </map>
        </property>
    </bean>

    <bean id="recordTypeFH"
          class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="names"
                  value="recordType,Date,CustomData1,CustomData2,CustomData3"/>
        <property name="delimiter" value="|"/>
    </bean>
    
    <bean id="recordType471"
          class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="names"
                  value="recordType,ibe_location,ibe_center,ibe_account,ibe_analysis,ibe_intercompany,ibe_accounting_date,ibe_currency_code,ibe_debit_amount,ibe_credit_amount"/>
        <property name="delimiter" value="|"/>
    </bean>
    
    <bean id="recordType472"
          class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="names"
                  value="recordType,ibe_location,ibe_center,ibe_account,ibe_analysis,ibe_intercompany,ibe_accounting_date,ibe_currency_code,ibe_debit_amount,ibe_credit_amount"/>
        <property name="delimiter" value="|"/>
    </bean>
    
    <bean id="recordTypeFT"
          class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="names"
                  value="recordType,NumberOfRecords,TotalDebitAmount,TotalCreditAmount"/>
        <property name="delimiter" value="|"/>
    </bean>

    <util:map id="recordTypeMap">
        <entry key="FH">
            <value>HEADER</value>
        </entry>
        <entry key="FT">
            <value>FOOTER</value>
        </entry>
        <entry key="471">
            <value>Request_471</value>
        </entry>
        <entry key="472">
            <value>Request_472</value>
        </entry>
    </util:map>

    <bean name="dataLocator" class="com.carnival.batch.support.MultipleResource">
        <property name="dataPaths">
            <list>
                <value>file:${inputFile}</value>
            </list>
        </property>
    </bean>

<!--    <bean id="flatFileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <property name="resource" ref="exportFileLocator"/>
        <property name="appendAllowed" value="false"/>
        <property name="shouldDeleteIfExists" value="true"/>
        <property name="lineAggregator" ref="lineAggregator"/>
    </bean>

    <bean id="lineAggregator" class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
        <property name="format" value="%-24s%-22s%-3s%-8s%-1s%-15s%-16s%-10s%-5s%-1s%-1s%-15s%-12s%-8s"/>
        <property name="minimumLength" value="141"/>
        <property name="maximumLength" value="141"/>
    </bean>-->
    <bean id="flatFileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" ref="exportFileLocator" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|"/>
			</bean>
		</property>
</bean>

    <bean id="exportFileLocator" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg type="java.lang.String" value="${outputFile}"/>
    </bean>


    <bean id="config" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location">
            <value>filereader.properties</value>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="propertiesArray">
            <list>
                <ref bean="config"/>
            </list>
        </property>
        <property name="systemPropertiesModeName"
                  value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="order" value="1"/>
    </bean>

</beans>
